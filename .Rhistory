#Basic Installs
#install.packages("devtools")
#munging packages
data_pkgs <- c("datasets", "data.table", "tidycensus", "ggfortify",
"broom", "DT")
#scales has currency formats for plots
format_pkgs <- c("formattable","scales", "chron", "xts", "tools")
#nice themes and plot insetting
plot_pkgs <- c("ggpmisc", "ggpubr", "dygraphs", "RColorBrewer",
"threejs", "r2d3", "gganimate", "gifski", "gapminder",
"ggraph", "igraph", "data.tree", "packcircles", "treemap",
"ggrepel", "ggthemes")
#map interactions and functions
geospatial_pkgs <- c("leaflet", "raster", "tmap", "rmapshaper",
"tmaptools", "sf", "ggmap", "geosphere", "KernSmooth",
"stars", "terra")
devtools::install_github("rsbivand/sp@evolution")
Sys.setenv("_SP_EVOLUTION_STATUS_"=2)
#CRS("+proj=longlat")
#sf::st_crs()
#shiny
shiny_pkgs <- c("shiny", "shinydashboard", "flexdashboard", "shinyjs", "V8")
#---Load Function
#This checks if installed first
#Only installs missing
using<-function(...) {
libs<-unlist(list(...))
req<-unlist(lapply(libs,require,character.only=TRUE))
need<-libs[req==FALSE]
if(length(need)>0){
install.packages(need)
lapply(need,require,character.only=TRUE)
}
}
#---Now apply to lists of packages
#using(tidyverse_pkgs)
using(data_pkgs)
munging packages
#munging packages
data_pkgs <- c("datasets", "data.table", "tidycensus", "ggfortify",
"broom", "DT")
#scales has currency formats for plots
format_pkgs <- c("formattable","scales", "chron", "xts", "tools")
#nice themes and plot insetting
plot_pkgs <- c("ggpmisc", "ggpubr", "dygraphs", "RColorBrewer",
"threejs", "r2d3", "gganimate", "gifski", "gapminder",
"ggraph", "igraph", "data.tree", "packcircles", "treemap",
"ggrepel", "ggthemes")
#map interactions and functions
geospatial_pkgs <- c("leaflet", "raster", "tmap", "rmapshaper",
"tmaptools", "sf", "ggmap", "geosphere", "KernSmooth",
"stars", "terra")
shiny_pkgs <- c("shiny", "shinydashboard", "flexdashboard", "shinyjs", "V8")
using<-function(...) {
libs<-unlist(list(...))
req<-unlist(lapply(libs,require,character.only=TRUE))
need<-libs[req==FALSE]
if(length(need)>0){
install.packages(need)
lapply(need,require,character.only=TRUE)
}
}
using(tidyverse_pkgs)
nstall.packages("tidyverse")
install.packages("tidyverse")
using(data_pkgs)
using(format_pkgs)
using(data_pkgs)
using(format_pkgs)
using(plot_pkgs)
install.packages("chron")
install.packages("formattable")
install.packages("xts")
install.packages("zoo")
#munging packages
data_pkgs <- c("datasets", "data.table", "tidycensus", "ggfortify",
"broom", "DT")
#scales has currency formats for plots
format_pkgs <- c("formattable","scales", "chron", "xts", "tools")
#nice themes and plot insetting
plot_pkgs <- c("ggpmisc", "ggpubr", "dygraphs", "RColorBrewer",
"threejs", "r2d3", "gganimate", "gifski", "gapminder",
"ggraph", "igraph", "data.tree", "packcircles", "treemap",
"ggrepel", "ggthemes")
#map interactions and functions
geospatial_pkgs <- c("leaflet", "raster", "tmap", "rmapshaper",
"tmaptools", "sf", "ggmap", "geosphere", "KernSmooth",
"stars", "terra")
devtools::install_github("rsbivand/sp@evolution")
Sys.setenv("_SP_EVOLUTION_STATUS_"=2)
#CRS("+proj=longlat")
#sf::st_crs()
#shiny
shiny_pkgs <- c("shiny", "shinydashboard", "flexdashboard", "shinyjs", "V8")
#---Load Function
#This checks if installed first
#Only installs missing
using<-function(...) {
libs<-unlist(list(...))
req<-unlist(lapply(libs,require,character.only=TRUE))
need<-libs[req==FALSE]
if(length(need)>0){
install.packages(need)
lapply(need,require,character.only=TRUE)
}
}
#---Now apply to lists of packages
install.packages("tidyverse")
install.packages("chron")
data_pkgs <- c("datasets", "data.table", "tidycensus", "ggfortify",
"broom", "DT")
#scales has currency formats for plots
format_pkgs <- c("formattable","scales", "chron", "xts", "tools")
#nice themes and plot insetting
plot_pkgs <- c("ggpmisc", "ggpubr", "dygraphs", "RColorBrewer",
"threejs", "r2d3", "gganimate", "gifski", "gapminder",
"ggraph", "igraph", "data.tree", "packcircles", "treemap",
"ggrepel", "ggthemes")
#map interactions and functions
geospatial_pkgs <- c("leaflet", "raster", "tmap", "rmapshaper",
"tmaptools", "sf", "ggmap", "geosphere", "KernSmooth",
"stars", "terra")
devtools::install_github("rsbivand/sp@evolution")
Sys.setenv("_SP_EVOLUTION_STATUS_"=2)
#CRS("+proj=longlat")
#sf::st_crs()
#shiny
shiny_pkgs <- c("shiny", "shinydashboard", "flexdashboard", "shinyjs", "V8")
#---Load Function
#This checks if installed first
#Only installs missing
using<-function(...) {
libs<-unlist(list(...))
req<-unlist(lapply(libs,require,character.only=TRUE))
need<-libs[req==FALSE]
if(length(need)>0){
install.packages(need)
lapply(need,require,character.only=TRUE)
}
}
using(data_pkgs)
using(data_pkgs)
using(format_pkgs)
using(plot_pkgs)
using(geospatial_pkgs)
install.packages("leaflet")
install.packages("raster")
install.packages("tmap")
install.packages("rmapshaper")
install.packages("ggmap")
install.packages("geosphere")
install.packages("stars")
install.packages("terra")
install.packages("terra")
renv::snapshot()
renv::snapshot()
renv::snapshot()
git checkout --ours path/file
git checkout --ours main/_quarto.yml
git add _quarto.yml
git add "about.qmd"
git add about.qmd
x =10
2x +2x
x =10
y = 2*x +2*x
1 + 1
x =10
y = 2*x +2*x
quarto render
x = 10
y = 2*x +2*x
renv::status()
renv::snapshot()
# Load necessary libraries
library(tidyverse)
library(knitr)
library(kableExtra)
library(shinylive)
# Set chunk options
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
# Check if file exists in current directory
if (!file.exists("human-vs-ai-utility-mwtth.csv")) {
stop("CSV file not found. Please ensure 'human-vs-ai-utility-mwtth.csv' is in the same directory as this .qmd file")
}
# Check if file exists in current directory
if (!file.exists("data/human-vs-ai-utility-mwtth.csv")) {
stop("CSV file not found. Please ensure 'human-vs-ai-utility-mwtth.csv' is in the same directory as this .qmd file")
}
# Check if file exists in current directory
if (!file.exists("~/microeconomics/data/human-vs-ai-utility-mwtth.csv")) {
stop("CSV file not found. Please ensure 'human-vs-ai-utility-mwtth.csv' is in the same directory as this .qmd file")
}
# Check if file exists in current directory
if (!file.exists("/microeconomics/data/human-vs-ai-utility-mwtth.csv")) {
stop("CSV file not found. Please ensure 'human-vs-ai-utility-mwtth.csv' is in the same directory as this .qmd file")
}
# Check if file exists in current directory
if (!file.exists("~/microeconomics/data/human-vs-ai-utility-mwtth.csv")) {
stop("CSV file not found. Please ensure 'human-vs-ai-utility-mwtth.csv' is in the same directory as this .qmd file")
}
# Check if file exists in current directory
if (!file.exists("~/the-goat-market/microeconomics/data/human-vs-ai-utility-mwtth.csv")) {
stop("CSV file not found. Please ensure 'human-vs-ai-utility-mwtth.csv' is in the same directory as this .qmd file")
}
# Load the CSV data
data <- read.csv("human-vs-ai-utility-mwtth.csv", stringsAsFactors = FALSE)
# Check if file exists in current directory
if (!file.exists("~/the-goat-market/microeconomics/data/human-vs-ai-utility-mwtth.csv")) {
stop("CSV file not found. Please ensure 'human-vs-ai-utility-mwtth.csv' is in the same directory as this .qmd file")
}
# Load the CSV data
data <- read.csv("~/the-goat-market/microeconomics/data/human-vs-ai-utility-mwtth.csv", stringsAsFactors = FALSE)
# Rename columns for convenience
colnames(data) <- c("Timestamp", "Score", "Group", "Section")
# Convert Score to numeric and clean data
data$Score <- as.numeric(data$Score)
# Remove any rows with NA scores
data <- data[!is.na(data$Score), ]
# Display first few rows
head(data) %>%
kable(caption = "First 6 rows of the dataset") %>%
kable_styling(bootstrap_options = c("striped", "hover"))
renv::status()
renv::update()
renv::snapshot()
#| context: setup
library(shiny)
library(DT)
library(knitr)
library(rmarkdown)
library(htmltools)
library(downloadthis)
#| echo: false
div(
class = "card mb-4",
div(
class = "card-header bg-primary text-white",
h4("The Process of Wealth Creation Analysis", class = "card-title mb-0")
),
div(
class = "card-body",
p("This interactive assignment allows you to enter your experimental data and see calculations in real-time. Complete each section by entering your values and providing your analysis.")
)
)
#| echo: false
div(
class = "card mb-4",
div(
class = "card-header bg-primary text-white",
h4("The Process of Wealth Creation Analysis", class = "card-title mb-0")
),
div(
class = "card-body",
p("This interactive assignment allows you to enter your experimental data and see calculations in real-time. Complete each section by entering your values and providing your analysis.")
)
)
#| echo: false
div(
class = "card",
div(class = "card-header", h5("Personal Results")),
div(
class = "card-body",
fluidRow(
column(4, selectInput("completed_seal", "Completed a seal:", choices = c("", "Yes", "No"))),
column(4, numericInput("time_taken", "Time taken (minutes):", value = NA, min = 0, step = 0.1)),
column(4, numericInput("seals_attempted", "Seals attempted:", value = NA, min = 0, step = 1))
)
)
)
#| context: setup
library(shiny)
library(DT)
library(knitr)
library(rmarkdown)
library(htmltools)
library(downloadthis)
#| echo: false
div(
class = "card mb-4",
div(
class = "card-header bg-primary text-white",
h4("The Process of Wealth Creation Analysis", class = "card-title mb-0")
),
div(
class = "card-body",
p("This interactive assignment allows you to enter your experimental data and see calculations in real-time. Complete each section by entering your values and providing your analysis.")
)
)
#| echo: false
div(
class = "card",
div(class = "card-header", h5("Personal Results")),
div(
class = "card-body",
fluidRow(
column(4, selectInput("completed_seal", "Completed a seal:", choices = c("", "Yes", "No"))),
column(4, numericInput("time_taken", "Time taken (minutes):", value = NA, min = 0, step = 0.1)),
column(4, numericInput("seals_attempted", "Seals attempted:", value = NA, min = 0, step = 1))
)
)
)
#| echo: false
div(
class = "card mb-4",
div(
class = "card-header bg-primary text-white",
h4("The Process of Wealth Creation Analysis", class = "card-title mb-0")
),
div(
class = "card-body",
p("This interactive assignment allows you to enter your experimental data and see calculations in real-time. Complete each section by entering your values and providing your analysis.")
)
)
#| echo: false
div(
class = "card",
div(class = "card-header", h5("Personal Results")),
div(
class = "card-body",
fluidRow(
column(4, selectInput("completed_seal", "Completed a seal:", choices = c("", "Yes", "No"))),
column(4, numericInput("time_taken", "Time taken (minutes):", value = NA, min = 0, step = 0.1)),
column(4, numericInput("seals_attempted", "Seals attempted:", value = NA, min = 0, step = 1))
)
)
)
#| context: setup
library(shiny)
library(DT)
library(knitr)
library(rmarkdown)
library(htmltools)
library(downloadthis)
#| echo: false
div(
class = "card mb-4",
div(
class = "card-header bg-primary text-white",
h4("The Process of Wealth Creation Analysis", class = "card-title mb-0")
),
div(
class = "card-body",
p("This interactive assignment allows you to enter your experimental data and see calculations in real-time. Complete each section by entering your values and providing your analysis.")
)
)
import sys
install.packages("python")
renv::status()
renv::snapshot()
source("renv/activate.R")
Sys.setenv(RETICULATE_PYTHON = "/home/yourusername/quarto-env/bin/python")
source("renv/activate.R")
Sys.setenv(RETICULATE_PYTHON = "/home/meghan-downes/quarto-env/bin/python")
source("renv/activate.R")
Sys.setenv(RETICULATE_PYTHON = "~/home/meghan-downes/quarto-env/bin/python")
install.packages(c("boot", "lattice", "mgcv", "spatial"))
